diff --git a/server/commands.c b/server/commands.c
index c2282c0359..a28df3f27a 100644
--- a/server/commands.c
+++ b/server/commands.c
@@ -551,7 +551,7 @@ static struct command commands[] = {
       "all cities and units etc. Use with care!"), NULL,
    CMD_ECHO_ALL, VCF_NONE, 50
   },
-  {"save",	ALLOW_ADMIN,
+  {"save",	ALLOW_CTRL,
    /* TRANS: translate text between <> only */
    N_("save\n"
       "save <file-name>"),
diff --git a/server/savegame/savemain.c b/server/savegame/savemain.c
index 8eda2ed9b6..adb8875f9f 100644
--- a/server/savegame/savemain.c
+++ b/server/savegame/savemain.c
@@ -144,8 +144,8 @@ void save_game(const char *orig_filename, const char *save_reason,
   stdata->save_compress_level = game.server.save_compress_level;
 
   if (!orig_filename) {
-    stdata->filepath[0] = '\0';
-    filename = stdata->filepath;
+    con_write(C_FAIL, _("Failed saving game. Missing filename."));
+    return;
   } else {
     sz_strlcpy(stdata->filepath, orig_filename);
     if ((filename = strrchr(stdata->filepath, '/'))) {
@@ -182,13 +182,6 @@ void save_game(const char *orig_filename, const char *save_reason,
     }
   }
 
-  /* If orig_filename is NULL or empty, use a generated default name. */
-  if (filename[0] == '\0') {
-    /* manual save */
-    generate_save_name(game.server.save_name, filename,
-                       sizeof(stdata->filepath) + stdata->filepath - filename, "manual");
-  }
-
   timer_cpu = timer_new(TIMER_CPU, TIMER_ACTIVE, "save cpu");
   timer_user = timer_new(TIMER_USER, TIMER_ACTIVE, "save user");
   timer_start(timer_cpu);
diff --git a/server/stdinhand.c b/server/stdinhand.c
index ead9c7c769..c8eacd1a60 100644
--- a/server/stdinhand.c
+++ b/server/stdinhand.c
@@ -19,6 +19,7 @@
 #include <stdio.h>
 #include <stdlib.h>
 #include <string.h>
+#include <time.h>
 
 #ifdef FREECIV_HAVE_LIBREADLINE
 #include <readline/readline.h>
@@ -666,11 +667,6 @@ static bool show_serverid(struct connection *caller, char *arg)
 **************************************************************************/
 static bool save_command(struct connection *caller, char *arg, bool check)
 {
-  if (is_restricted(caller)) {
-    cmd_reply(CMD_SAVE, caller, C_FAIL,
-              _("You cannot save games manually on this server."));
-    return FALSE;
-  }
   if (!check) {
     save_game(arg, "User request", FALSE);
   }
@@ -3745,10 +3741,20 @@ bool load_command(struct connection *caller, const char *filename, bool check,
   }
 
   {
+    char websave[300];
+    struct strvec *webdirs = strvec_new();
+
+    if (caller != NULL) {
+      fc_snprintf(websave, sizeof(websave), "%s/%s", srvarg.saves_pathname, caller->username);
+      strvec_append(webdirs, websave);
+    }
+    fc_snprintf(websave, sizeof(websave), "%s/pbem", srvarg.saves_pathname);
+    strvec_append(webdirs, websave);
+
     /* it is a normal savegame or maybe a scenario */
     char testfile[MAX_LEN_PATH];
     const struct strvec *pathes[] = {
-      get_save_dirs(), get_scenario_dirs(), NULL
+      get_save_dirs(), get_scenario_dirs(), webdirs, NULL
     };
     const char *exts[] = {
       "sav", "gz", "bz2", "xz", "sav.gz", "sav.bz2", "sav.xz", "sav.zst", NULL
@@ -4434,6 +4440,31 @@ static bool handle_stdin_input_real(struct connection *caller, char *str,
 
   level = command_level(command_by_number(cmd));
 
+  /* Special savegame handling for Freeciv-web. */
+  if (strncmp(game.server.meta_info.type, "pbem", 4) == 0 
+      && cmd == CMD_SAVE && caller) {
+    char pbemfile[200];
+    fc_snprintf(pbemfile, sizeof(pbemfile), "%s/pbem/pbem-%s-%u", srvarg.saves_pathname, caller->username, (unsigned)time(NULL));
+    sz_strlcpy(arg, pbemfile);
+  } else if (cmd == CMD_SAVE && caller) {
+    char savefile[300];
+    char buffer[30];
+    time_t timer;
+    struct tm* tm_info;
+
+    time(&timer);
+    tm_info = localtime(&timer);
+    strftime(buffer, 30, "%Y-%m-%d-%H_%M", tm_info);
+    fc_snprintf(savefile, sizeof(savefile), "%s/%s/%s_T%u_%s", srvarg.saves_pathname, 
+                caller->username, caller->username, game.info.turn, buffer);
+    sz_strlcpy(arg, savefile);
+
+    /* create sub-directory from players username in saves directory. */
+    char savedir[300];
+    fc_snprintf(savedir, sizeof(savedir), "%s/%s", srvarg.saves_pathname, caller->username);
+    make_dir(savedir);
+  }
+
   if (conn_can_vote(caller, NULL) && level == ALLOW_CTRL
       && conn_get_access(caller) == ALLOW_BASIC && !check
       && !vote_would_pass_immediately(caller, cmd)) {
diff --git a/utility/shared.c b/utility/shared.c
index ea968a0335..c16932fcee 100644
--- a/utility/shared.c
+++ b/utility/shared.c
@@ -1766,7 +1766,7 @@ bool make_dir(const char *pathname)
     mkdir(path, 0755);
 #endif /* HAVE__MKDIR */
 #else  /* FREECIV_MSWINDOWS */
-    mkdir(path, 0755);
+    mkdir(path, 0775);
 #endif /* FREECIV_MSWINDOWS */
 
     if (dir) {
